[1mdiff --git a/backend/api/v1/controllers/seller/order.controller.js b/backend/api/v1/controllers/seller/order.controller.js[m
[1mindex ee13f24..9e56199 100644[m
[1m--- a/backend/api/v1/controllers/seller/order.controller.js[m
[1m+++ b/backend/api/v1/controllers/seller/order.controller.js[m
[36m@@ -5,23 +5,25 @@[m [mconst Category = require("../../models/category.model");[m
 module.exports.index = async (req, res) => {[m
   try {[m
     const token = req.headers.authorization.split(" ")[1];[m
[31m-    const seller = await User.findOne({token : token});[m
[31m-    const category = await Category.findOne({seller_id : seller.id});[m
[32m+[m[32m    const seller = await User.findOne({ token: token });[m
[32m+[m[32m    const category = await Category.findOne({ seller_id: seller.id });[m
     const category_id = String(category.id);[m
     console.log(category_id);[m
     // Truy v·∫•n t·∫•t c·∫£ ƒë∆°n h√†ng t·ª´ MongoDB[m
[31m-    const orders = await Order.find({})[m
[31m-      .select("-_id userId orderId status products");[m
[31m-    let products = [];;[m
[32m+[m[32m    const orders = await Order.find({}).select([m
[32m+[m[32m      "-_id userId orderId status products"[m
[32m+[m[32m    );[m
[32m+[m[32m    let products = [];[m
     Promise.all([m
[31m-      orders.map((order) => User.findOne({_id : order.userId}))[m
[31m-    ).then (users => {[m
[32m+[m[32m      orders.map((order) => User.findOne({ _id: order.userId }))[m
[32m+[m[32m    ).then((users) => {[m
       orders.forEach((order) => {[m
         // console.log(user);[m
[31m-        order.products.forEach(productInOrder => {[m
[31m-          const pathSegments = productInOrder._doc.primary_category_path.split("/");[m
[32m+[m[32m        order.products.forEach((productInOrder) => {[m
[32m+[m[32m          const pathSegments =[m
[32m+[m[32m            productInOrder._doc.primary_category_path.split("/");[m
           if (pathSegments[2] === category_id) {[m
[31m-            const user = users.find(user => user.id === order.userId);[m
[32m+[m[32m            const user = users.find((user) => user.id === order.userId);[m
             products.push({[m
               productName: productInOrder._doc.name,[m
               userName: user.fullname,[m
[36m@@ -37,7 +39,7 @@[m [mmodule.exports.index = async (req, res) => {[m
         message: "Success",[m
         orders: products,[m
       });[m
[31m-    })[m
[32m+[m[32m    });[m
   } catch (error) {[m
     res.status(400).json({[m
       message: error,[m
[1mdiff --git a/backend/api/v1/models/order.model.js b/backend/api/v1/models/order.model.js[m
[1mindex a1fd571..bce2dae 100644[m
[1m--- a/backend/api/v1/models/order.model.js[m
[1m+++ b/backend/api/v1/models/order.model.js[m
[36m@@ -1,17 +1,16 @@[m
 const mongoose = require("mongoose");[m
 [m
 const orderSchema = new mongoose.Schema({[m
[31m-  userId: String,[m
[31m-  orderId: String,[m
[31m-  status: String,[m
[32m+[m[32m  userId: String, // ID ng∆∞·ªùi mua[m
[32m+[m[32m  orderId: String, // ID ƒë∆°n h√†ng[m
[32m+[m[32m  status: String, // Tr·∫°ng th√°i ƒë∆°n h√†ng[m
   products: [[m
     {[m
[31m-      quantity: Number,[m
[31m-      price: Number,[m
[32m+[m[32m      quantity: Number, // S·ªë l∆∞·ª£ng s·∫£n ph·∫©m[m
[32m+[m[32m      price: Number, // Gi√° s·∫£n ph·∫©m[m
     },[m
   ],[m
[31m-  sellerId: String,[m
[31m-[m
[32m+[m[32m  sellerId: String, // ID ng∆∞·ªùi b√°n[m
 });[m
 [m
 const Order = mongoose.model("Order", orderSchema, "orders");[m
[1mdiff --git a/backend/api/v1/routes/seller/order.route.js b/backend/api/v1/routes/seller/order.route.js[m
[1mindex fa8cb18..cba315a 100644[m
[1m--- a/backend/api/v1/routes/seller/order.route.js[m
[1m+++ b/backend/api/v1/routes/seller/order.route.js[m
[36m@@ -4,7 +4,8 @@[m [mconst controller = require("../../controllers/seller/order.controller");[m
 [m
 const routes = express.Router();[m
 [m
[31m-routes.get("/" , controller.index);[m
[32m+[m[32m// Route x·ª≠ l√Ω y√™u c·∫ßu GET danh s√°ch ƒë∆°n h√†ng[m
[32m+[m[32mroutes.get("/", controller.index);[m
 // routes.get("/search", controller.search);[m
 [m
[31m-module.exports = routes; [m
\ No newline at end of file[m
[32m+[m[32mmodule.exports = routes;[m
